name: Run the workflow

on:
  push:
    branches:
      - '**'

jobs:
  check-conditions:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.should_run.outputs.result }}
    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v3

      - name: ‚úÖ Check if actor is repo owner and commit message matches
        id: should_run
        run: |
          echo "result=false" >> $GITHUB_OUTPUT  # Default to false

          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MSG"
          echo "Actor: ${{ github.actor }}"
          echo "Repo owner: ${{ github.repository_owner }}"

          if [[ "${{ github.actor }}" == "${{ github.repository_owner }}" && "$COMMIT_MSG" == Add\ files\ via\ upload* ]]; then
            echo "result=true" >> $GITHUB_OUTPUT
          fi

  build-video:
    needs: check-conditions
    if: needs.check-conditions.outputs.should_run == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v3

      - name: üîç Extract duration based on branch name
        id: duration
        run: |
          BRANCH_NAME="${GITHUB_REF##*/}"
          echo "Branch name: $BRANCH_NAME"

          if [[ "$BRANCH_NAME" == *-01 ]]; then
            echo "duration=3600" >> $GITHUB_OUTPUT
            echo "MAKE_VIDEO_SCRIPT=make_video" >> $GITHUB_OUTPUT
          elif [[ "$BRANCH_NAME" == *-04 ]]; then
            echo "duration=14400" >> $GITHUB_OUTPUT
            echo "MAKE_VIDEO_SCRIPT=make_video" >> $GITHUB_OUTPUT
          elif [[ "$BRANCH_NAME" == *-live ]]; then
            echo "duration=14400" >> $GITHUB_OUTPUT
          else
            echo "duration=0" >> $GITHUB_OUTPUT
          fi

      - name: Install dependencies
        run: pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client

      - name: ‚öôÔ∏è Set up FFmpeg
        run: |
          sudo apt update
          sudo apt install -y ffmpeg

      - name: üõ†Ô∏è Run Bash video script
        run: bash scripts/${{ steps.duration.outputs.MAKE_VIDEO_SCRIPT }}.sh "${{ steps.duration.outputs.duration }}"
        
      - name: üõ†Ô∏è Run Bash video script for shorts
        run: |
          bash scripts/${{ steps.duration.outputs.MAKE_VIDEO_SCRIPT }}.sh "178"
          LATEST_FILE=$(ls -t *.mp4 | head -n 1)
          if [ -z "$LATEST_FILE" ]; then
            echo "‚ùå No .mp4 files found in the current directory."
            exit 1
          fi
          OUTPUT_FILE="converted_${LATEST_FILE}"
          ffmpeg -i "$LATEST_FILE" -vf "crop=in_h*9/16:in_h:(in_w-out_w)/2:0" -c:a copy "$OUTPUT_FILE"
          if [ $? ]; then
            echo "‚úÖ Conversion complete: $OUTPUT_FILE"
            echo "Removing $OUTPUT_FILE..."
            rm $LATEST_FILE
          fi
        

      - name: üì¶ Upload final video as artifact
        uses: actions/upload-artifact@v4
        with:
          name: final-relaxing-video-${{ github.run_id }}-${{ github.sha }}
          path: "*.mp4"
